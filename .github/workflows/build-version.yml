# This workflow generates a new version and pushes it to the main branch
# It runs manually

name: "Build version"

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "The type of release to generate"
        required: true
        default: "patch"

permissions:
  contents: write

jobs:
  build-and-upload-new-version:
    runs-on: ubuntu-latest

    steps:
      - name: Check if input is valid
        run: |
          if [[ "${{ github.event.inputs.release_type }}" != "major" && "${{ github.event.inputs.release_type }}" != "minor" && "${{ github.event.inputs.release_type }}" != "patch" ]]; then
            echo "Invalid release type. Please use 'major', 'minor' or 'patch'."
            exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          fetch-depth: 0

      - name: Setup node js
        uses: actions/setup-node@v4
        with:
          node-version: 'latest'

      - name: Setup git
        # The name of this bot is bnote-settings-deployer
        run: git config --global user.name "bnote-settings-deployer" && git config --global user.email "bnote-settings-deployer@github.com"

      - name: Install dependencies
        run: npm install

      - name: Check tests and eslint
        run: |
          npm test
          npm run lint

      - name: Build new version
        # Use standard-version to generate a new version
        run: npm run release -- --release-as ${{ github.event.inputs.release_type }}

      - name: Push new version
        run: git push --follow-tags origin main
        env:
            GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
